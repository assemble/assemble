<p>Examples to test the "relative" and "assets" variables, and to show how they work</p>

{{#assets_one}}
<h1>"Public" Folder</h1>
<p>Public (assets) folder is in the project root</p>
<pre>
assets_one: {
  options: {assets: 'test/actual/public'},
  files: {'test/actual/assets-public-folder.html': ['test/files/assets.hbs']}
},
</pre>
{{/assets_one}}
{{#assets_two}}
<h1>Same Folder</h1>
<p>Assets folder is in the same dir as dest files.</p>
<pre>
assets_two: {
  options: {assets: 'test/actual'},
  files: {'test/actual/assets-same-folder.html': ['test/files/assets.hbs']}
},
</pre>
{{/assets_two}}
{{#assets_three}}
<h1>Project Root</h1>
<p>Assets folder is in the project root, which is not the same dir as dest files.</p>
<pre>
assets_three: {
  options: {assets: ''},
  files: {'test/actual/assets-root.html': ['test/files/assets.hbs']}
}
</pre>
{{/assets_three}}

<h1>Relative Helper</h1>
<script src="{{relative page.dest 'css'}}/one/two/three.js"></script>
<script src="{{relative page.dest 'js'}}/one/two/three.js"></script>
<script src="{{relative page.dest 'js'}}one/two/three.js"></script>
<script src="./{{relative page.dest 'js'}}one/two/three.js"></script>

<h1>Assets Helper</h1>
<script src="{{assets}}one/two/three.js"></script>
<script src="{{assets}}/one/two/three.js"></script>

